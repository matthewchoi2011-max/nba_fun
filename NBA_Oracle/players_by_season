import json
import os
import math

def clean_value(val):
    if val is None:
        return 0
    if isinstance(val, float) and math.isnan(val):
        return 0
    if isinstance(val, str) and val.strip().lower() == "nan":
        return 0
    return val

players_json_list = []

folder_path = "players/"
output_folder = "seasons_json"

os.makedirs(output_folder, exist_ok=True)

# Load all player JSONs
for filename in os.listdir(folder_path):
    if filename.endswith('.json'):
        with open(os.path.join(folder_path, filename), encoding="utf-8") as f:
            data = json.load(f)
            players_json_list.append(data)

# Output dictionary: season -> dict of players
season_stats_all = {}

for player in players_json_list:
    name = player['full_name']
    player_id = str(player['player_id'])  # use as string for JSON key
    specs = player.get('specs', {})
    season_stats = player.get('season_stats', {})
    player_awards = player.get('awards', {})

    for season, stats in season_stats.items():
        if season not in season_stats_all:
            season_stats_all[season] = {}

        cleaned_stats = {k: clean_value(stats.get(k)) for k in stats}

        # Extract awards relevant for this season
        season_awards = {}
        for award_name, award_seasons in player_awards.items():
            season_awards[award_name] = season in award_seasons

        season_stats_all[season][name] = {
            "id": player_id,
            "team": specs.get("Teams", []),
            "position": specs.get("Position", ""),
            "height": specs.get("Height", None),
            "weight": specs.get("Weight", None),
            "awards": season_awards,
            "stats": cleaned_stats
        }

# Sort and save each season separately
sorted_seasons = sorted(season_stats_all.keys(), key=lambda s: int(s.split('-')[0]))

for season in sorted_seasons:
    file_path = os.path.join(output_folder, f"{season}.json")
    with open(file_path, "w", encoding="utf-8") as f:
        json.dump(season_stats_all[season], f, indent=4, ensure_ascii=False)

print(f"Saved {len(sorted_seasons)} season JSON files successfully in '{output_folder}'!")


